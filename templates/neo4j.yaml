kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: zhitu-neo4j-volume
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: zhitu-neo4j-pv
spec:
  capacity:
    storage: 3Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: zhitu-neo4j-volume
  nfs:
    path: /nfsdata/zhitu/neo4jdata
    server: 192.168.1.71

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: zhitu-neo4j-claim
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
  storageClassName: zhitu-neo4j-volume

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: zhitu-neo4j
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: zhitu-neo4j
    spec:
      containers:
        - name: pod-neo4j
          image: "registry.elensdata.com/elensai/neo4j:3.5.8"
          imagePullPolicy: IfNotPresent
          ports:
            - name: neo4j-p-h
              containerPort: 7474
            - name: neo4j-p-b
              containerPort: 7687
          volumeMounts:
            - mountPath: /data
              name: neo4j-v
      volumes:
        - name: neo4j-v
          persistentVolumeClaim:
            claimName: zhitu-neo4j-claim


